name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-binaries:
    name: Build Release Binaries
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: zenoh-recorder-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: zenoh-recorder-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: zenoh-recorder-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: zenoh-recorder-macos-arm64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      
      - name: Build release binary
        run: |
          cd zenoh-recorder
          cargo build --release --target ${{ matrix.target }}
      
      - name: Strip binary (Linux)
        if: runner.os == 'Linux'
        run: |
          strip zenoh-recorder/target/${{ matrix.target }}/release/zenoh-recorder
      
      - name: Strip binary (macOS)
        if: runner.os == 'macOS'
        run: |
          strip zenoh-recorder/target/${{ matrix.target }}/release/zenoh-recorder
      
      - name: Package binary
        run: |
          cd zenoh-recorder/target/${{ matrix.target }}/release
          tar czf ${{ matrix.artifact_name }}.tar.gz zenoh-recorder
      
      - name: Upload binary to release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: zenoh-recorder/target/${{ matrix.target }}/release/${{ matrix.artifact_name }}.tar.gz

  publish-docker:
    name: Publish Docker Image
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./zenoh-recorder
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/zenoh-recorder:latest
            ${{ secrets.DOCKER_USERNAME }}/zenoh-recorder:${{ steps.version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

